@baseUrl = http://localhost:3000/api
@inviterEmail = inviter@example.com
@inviteeEmail = invitee@example.com
@password = Password123

### Registro del primer usuario (Invitador)
POST {{baseUrl}}/user/register
Content-Type: application/json

{
  "firstName": "Inviter",
  "lastName": "User",
  "email": "{{inviterEmail}}",
  "password": "{{password}}"
}

### Guardar código de verificación del primer usuario
@inviterVerificationCode = 3181

### Verificar email del primer usuario
PUT {{baseUrl}}/user/verify
Content-Type: application/json

{
  "email": "{{inviterEmail}}",
  "code": "{{inviterVerificationCode}}"
}

### Iniciar sesión con el primer usuario
POST {{baseUrl}}/user/login
Content-Type: application/json

{
  "email": "{{inviterEmail}}",
  "password": "{{password}}"
}

### Guardar token del primer usuario
@inviterToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2VhMmZjYTE1MWI2ZjIwNzI0YjVlYmUiLCJyb2xlIjoidXNlciIsImlhdCI6MTc0MzQwMDkzMCwiZXhwIjoxNzQzNDA4MTMwfQ.4RWsorWoBpLJGyHaowFNXHtfmlF0KH_eufaoFVapxa8

### Obtener perfil del primer usuario
GET {{baseUrl}}/user/profile
Authorization: Bearer {{inviterToken}}

### Actualizar información de la compañía del primer usuario
PATCH {{baseUrl}}/user/company
Content-Type: application/json
Authorization: Bearer {{inviterToken}}

{
  "company": {
    "name": "Inviter Company",
    "cif": "B12345678",
    "address": {
      "street": "Calle Principal",
      "number": 123,
      "postal": 28001,
      "city": "Madrid"
    }
  }
}

### Registro del segundo usuario (Invitado)
POST {{baseUrl}}/user/register
Content-Type: application/json

{
  "firstName": "Invitee",
  "lastName": "User",
  "email": "{{inviteeEmail}}",
  "password": "{{password}}"
}

### Guardar código de verificación del segundo usuario
@inviteeVerificationCode = 5933

### Verificar email del segundo usuario
PUT {{baseUrl}}/user/verify
Content-Type: application/json

{
  "email": "{{inviteeEmail}}",
  "code": "{{inviteeVerificationCode}}"
}

### Iniciar sesión con el segundo usuario
POST {{baseUrl}}/user/login
Content-Type: application/json

{
  "email": "{{inviteeEmail}}",
  "password": "{{password}}"
}

### Guardar token del segundo usuario
@inviteeToken = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2VhMzI3NDAyY2QzY2UzOTFlYWZlNTYiLCJyb2xlIjoidXNlciIsImlhdCI6MTc0MzQwMTU5OSwiZXhwIjoxNzQzNDA4Nzk5fQ.3UfYWCBG8zBnBGN84omtEuOGhQslscjane5cNKHXxh4

### Obtener perfil del segundo usuario
GET {{baseUrl}}/user/profile
Authorization: Bearer {{inviteeToken}}

### Actualizar información de la compañía del segundo usuario
PATCH {{baseUrl}}/user/company
Content-Type: application/json
Authorization: Bearer {{inviteeToken}}

{
  "company": {
    "name": "Invitee Company",
    "cif": "B87654321",
    "address": {
      "street": "Calle Secundaria",
      "number": 456,
      "postal": 28002,
      "city": "Barcelona"
    }
  }
}

### Invitar al segundo usuario desde el primero
PATCH {{baseUrl}}/user/invite
Content-Type: application/json
Authorization: Bearer {{inviterToken}}

{
  "email": "{{inviteeEmail}}",
  "role": "admin"
}

### Guardar el ID del invitador para las siguientes operaciones
@inviterId = 67ea2fca151b6f20724b5ebe

### Intentar invitar a un usuario que no existe (prueba de error)
PATCH {{baseUrl}}/user/invite
Content-Type: application/json
Authorization: Bearer {{inviterToken}}

{
  "email": "nonexistent@example.com",
  "role": "user"
}

### Aceptar la invitación recibida
PATCH {{baseUrl}}/user/invite/accept
Content-Type: application/json
Authorization: Bearer {{inviteeToken}}

{
  "inviterId": "{{inviterId}}"
}

### Enviar otra invitación para la prueba de rechazo
PATCH {{baseUrl}}/user/invite
Content-Type: application/json
Authorization: Bearer {{inviterToken}}

{
  "email": "{{inviteeEmail}}",
  "role": "user"
}

### Rechazar la invitación recibida
PATCH {{baseUrl}}/user/invite/reject
Content-Type: application/json
Authorization: Bearer {{inviteeToken}}

{
  "inviterId": "{{inviterId}}"
}

### Intentar aceptar una invitación inexistente (prueba de error)
PATCH {{baseUrl}}/user/invite/accept
Content-Type: application/json
Authorization: Bearer {{inviteeToken}}

{
  "inviterId": "6507f942a55f4a001234abcd"
}

### Intentar rechazar una invitación inexistente (prueba de error)
PATCH {{baseUrl}}/user/invite/reject
Content-Type: application/json
Authorization: Bearer {{inviteeToken}}

{
  "inviterId": "6507f942a55f4a001234abcd"
}

### Recuperar contraseña del primer usuario (solicitar código)
POST {{baseUrl}}/user/recover
Content-Type: application/json

{
  "email": "{{inviterEmail}}"
}

### Guardar código de recuperación
@recoveryCode = 3185

### Cambiar contraseña
PATCH {{baseUrl}}/user/recover
Content-Type: application/json

{
  "email": "{{inviterEmail}}",
  "code": "{{recoveryCode}}",
  "password": "NewPassword123"
}

### Iniciar sesión con la nueva contraseña
POST {{baseUrl}}/user/login
Content-Type: application/json

{
  "email": "{{inviterEmail}}",
  "password": "NewPassword123"
}

### Eliminar cuenta del usuario invitador (soft delete)
DELETE {{baseUrl}}/user?soft=true
Authorization: Bearer {{inviterToken}}

### Cambiar el logo del invitado
PATCH {{baseUrl}}/user/logo
Authorization: Bearer {{inviteeToken}}
Content-Type: multipart/form-data; boundary=----WebKitFormBoundary7MA4YWxkTrZu0gW

------WebKitFormBoundary7MA4YWxkTrZu0gW
Content-Disposition: form-data; name="image"; filename="img.png"
Content-Type: image/png

< ./img.png
------WebKitFormBoundary7MA4YWxkTrZu0gW--
